"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/nutrilens",{

/***/ "(pages-dir-browser)/./src/features/NutriLens/NutriLensPage.tsx":
/*!**************************************************!*\
  !*** ./src/features/NutriLens/NutriLensPage.tsx ***!
  \**************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/.pnpm/react@19.1.0/node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/.pnpm/react@19.1.0/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Barcode_Camera_CameraOff_ChevronDown_RefreshCcw_Upload_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Barcode,Camera,CameraOff,ChevronDown,RefreshCcw,Upload!=!lucide-react */ \"(pages-dir-browser)/__barrel_optimize__?names=Barcode,Camera,CameraOff,ChevronDown,RefreshCcw,Upload!=!./node_modules/.pnpm/lucide-react@0.525.0_react@19.1.0/node_modules/lucide-react/dist/esm/lucide-react.js\");\n/* harmony import */ var _ScanResults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ScanResults */ \"(pages-dir-browser)/./src/features/NutriLens/ScanResults.tsx\");\n/* harmony import */ var _utils_barcodeScanner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/barcodeScanner */ \"(pages-dir-browser)/./src/utils/barcodeScanner.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\n// Import custom barcode scanner\n\n// Helper function to detect browser\nconst detectBrowser = ()=>{\n    const ua = navigator.userAgent;\n    let browser = {\n        name: 'Unknown',\n        version: 'Unknown',\n        mobile: false,\n        os: 'Unknown'\n    };\n    // Detect mobile\n    browser.mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(ua);\n    // Detect OS\n    if (/Win/.test(ua)) browser.os = 'Windows';\n    else if (/Mac/.test(ua)) browser.os = 'MacOS';\n    else if (/Linux/.test(ua)) browser.os = 'Linux';\n    else if (/Android/.test(ua)) browser.os = 'Android';\n    else if (/iOS|iPhone|iPad|iPod/.test(ua)) browser.os = 'iOS';\n    // Detect browser\n    if (/Firefox\\/([0-9.]+)/.test(ua)) {\n        var _ua_match;\n        browser.name = 'Firefox';\n        browser.version = ((_ua_match = ua.match(/Firefox\\/([0-9.]+)/)) === null || _ua_match === void 0 ? void 0 : _ua_match[1]) || '';\n    } else if (/MSIE\\/([0-9.]+)/.test(ua) || /Trident\\/.*rv:([0-9.]+)/.test(ua)) {\n        var _ua_match1, _ua_match2;\n        browser.name = 'IE';\n        browser.version = ((_ua_match1 = ua.match(/MSIE\\/([0-9.]+)/)) === null || _ua_match1 === void 0 ? void 0 : _ua_match1[1]) || ((_ua_match2 = ua.match(/Trident\\/.*rv:([0-9.]+)/)) === null || _ua_match2 === void 0 ? void 0 : _ua_match2[1]) || '';\n    } else if (/Chrome\\/([0-9.]+)/.test(ua)) {\n        var _ua_match3;\n        browser.name = 'Chrome';\n        browser.version = ((_ua_match3 = ua.match(/Chrome\\/([0-9.]+)/)) === null || _ua_match3 === void 0 ? void 0 : _ua_match3[1]) || '';\n    } else if (/Safari\\/([0-9.]+)/.test(ua)) {\n        var _ua_match4;\n        browser.name = 'Safari';\n        browser.version = ((_ua_match4 = ua.match(/Version\\/([0-9.]+)/)) === null || _ua_match4 === void 0 ? void 0 : _ua_match4[1]) || '';\n    } else if (/Edge\\/([0-9.]+)/.test(ua)) {\n        var _ua_match5;\n        browser.name = 'Edge';\n        browser.version = ((_ua_match5 = ua.match(/Edge\\/([0-9.]+)/)) === null || _ua_match5 === void 0 ? void 0 : _ua_match5[1]) || '';\n    }\n    return browser;\n};\nconst NutriLensPage = ()=>{\n    var _navigator_mediaDevices, _navigator_mediaDevices1;\n    _s();\n    const [nutritionData, setNutritionData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [capturedImageUrl, setCapturedImageUrl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(undefined);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [cameraDevices, setCameraDevices] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [selectedCamera, setSelectedCamera] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [detectedFoods, setDetectedFoods] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [scanSource, setScanSource] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('AI Vision');\n    const [barcodeScannerActive, setBarcodeScannerActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // Barcode scanner initially off\n    const [lastBarcode, setLastBarcode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isCameraReady, setIsCameraReady] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // New debug state for troubleshooting\n    const [debugMode, setDebugMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true); // Enable debug by default in production\n    const [debugInfo, setDebugInfo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        browserInfo: detectBrowser(),\n        secureContext:  true && window.isSecureContext,\n        hasMediaDevices: typeof navigator !== 'undefined' && !!navigator.mediaDevices,\n        hasEnumerateDevices: typeof navigator !== 'undefined' && !!((_navigator_mediaDevices = navigator.mediaDevices) === null || _navigator_mediaDevices === void 0 ? void 0 : _navigator_mediaDevices.enumerateDevices),\n        hasGetUserMedia: typeof navigator !== 'undefined' && !!((_navigator_mediaDevices1 = navigator.mediaDevices) === null || _navigator_mediaDevices1 === void 0 ? void 0 : _navigator_mediaDevices1.getUserMedia),\n        https:  true && window.location.protocol === 'https:',\n        errorLog: []\n    });\n    // Camera status\n    const [cameraStatus, setCameraStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('pending');\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const fileInputRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const streamRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const barcodeReaderRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null); // Using any to avoid TypeScript errors with ZXing\n    const barcodeScannerIntervalRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Logger function that both logs to console and updates debug state\n    const logDebug = (message, data)=>{\n        console.log(\"[NutriLens] \".concat(message), data || '');\n        if (debugMode) {\n            setDebugInfo((prev)=>({\n                    ...prev,\n                    errorLog: [\n                        ...prev.errorLog.slice(-9),\n                        \"\".concat(new Date().toISOString().slice(11, 19), \" \").concat(message)\n                    ]\n                }));\n        }\n    };\n    // Error handler for camera issues\n    const handleCameraError = (error, context)=>{\n        console.error(\"Camera error (\".concat(context, \"):\"), error);\n        const errorMessage = error instanceof Error ? error.message : String(error);\n        setError(\"Camera access failed: \".concat(errorMessage, \". Please ensure camera permissions are granted in your browser settings.\"));\n        setCameraStatus('error');\n        // Update debug info\n        setDebugInfo((prev)=>({\n                ...prev,\n                errorLog: [\n                    ...prev.errorLog.slice(-9),\n                    \"\".concat(new Date().toISOString().slice(11, 19), \" ERROR (\").concat(context, \"): \").concat(errorMessage)\n                ]\n            }));\n    };\n    // Function to check if camera API is supported\n    const checkCameraSupport = ()=>{\n        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n            setError('Camera access is not supported in this browser. Please try a modern browser like Chrome, Firefox, or Edge.');\n            setCameraStatus('not-supported');\n            return false;\n        }\n        return true;\n    };\n    // Function to stop any active stream\n    const stopCameraStream = ()=>{\n        if (streamRef.current) {\n            streamRef.current.getTracks().forEach((track)=>{\n                track.stop();\n            });\n            streamRef.current = null;\n            // Clear video source\n            if (videoRef.current) {\n                videoRef.current.srcObject = null;\n            }\n            logDebug('Camera stream stopped');\n        }\n    };\n    // Get available camera devices with enhanced error handling and logging\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"NutriLensPage.useEffect\": ()=>{\n            const getCameras = {\n                \"NutriLensPage.useEffect.getCameras\": async ()=>{\n                    try {\n                        logDebug('Starting camera detection process');\n                        setDebugInfo({\n                            \"NutriLensPage.useEffect.getCameras\": (prev)=>({\n                                    ...prev,\n                                    cameraPermission: 'checking'\n                                })\n                        }[\"NutriLensPage.useEffect.getCameras\"]);\n                        // First check if we have the required APIs\n                        if (!checkCameraSupport()) {\n                            logDebug('Camera API not supported');\n                            return;\n                        }\n                        setCameraStatus('initializing');\n                        // Check if we're in a secure context\n                        if (window.isSecureContext === false) {\n                            logDebug('WARNING: Not in a secure context - camera may not work');\n                        }\n                        // Check if protocol is HTTPS\n                        if (window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\n                            logDebug(\"WARNING: Not using HTTPS (\".concat(window.location.protocol, \") - camera requires HTTPS except on localhost\"));\n                        }\n                        // Explicitly request camera permission first if permissions API is available\n                        try {\n                            if (navigator.permissions && navigator.permissions.query) {\n                                logDebug('Checking camera permissions...');\n                                const permissionStatus = await navigator.permissions.query({\n                                    name: 'camera'\n                                });\n                                logDebug(\"Permission status: \".concat(permissionStatus.state));\n                                setDebugInfo({\n                                    \"NutriLensPage.useEffect.getCameras\": (prev)=>({\n                                            ...prev,\n                                            cameraPermission: permissionStatus.state\n                                        })\n                                }[\"NutriLensPage.useEffect.getCameras\"]);\n                                // Watch for permission changes\n                                permissionStatus.onchange = ({\n                                    \"NutriLensPage.useEffect.getCameras\": ()=>{\n                                        logDebug(\"Permission changed to: \".concat(permissionStatus.state));\n                                        setDebugInfo({\n                                            \"NutriLensPage.useEffect.getCameras\": (prev)=>({\n                                                    ...prev,\n                                                    cameraPermission: permissionStatus.state\n                                                })\n                                        }[\"NutriLensPage.useEffect.getCameras\"]);\n                                        if (permissionStatus.state === 'granted' && cameraStatus === 'error') {\n                                            // If permission was granted after previously being denied, retry\n                                            logDebug('Permission now granted, restarting camera');\n                                            startCamera();\n                                        } else if (permissionStatus.state === 'denied' && streamRef.current) {\n                                            // If permission was revoked while camera was running, stop it\n                                            logDebug('Permission revoked, stopping camera');\n                                            stopCameraStream();\n                                            setCameraStatus('error');\n                                            setError('Camera permission has been denied. Please enable it in your browser settings.');\n                                        }\n                                    }\n                                })[\"NutriLensPage.useEffect.getCameras\"];\n                                if (permissionStatus.state === 'denied') {\n                                    throw new Error('Camera permission has been denied. Please enable it in your browser settings.');\n                                } else if (permissionStatus.state === 'prompt') {\n                                    logDebug('User will be prompted for camera permission');\n                                }\n                            }\n                        } catch (permError) {\n                            logDebug('Could not check permissions explicitly', permError);\n                        // Continue anyway as some browsers don't support the permissions API fully\n                        }\n                        logDebug('Enumerating camera devices...');\n                        const devices = await navigator.mediaDevices.enumerateDevices();\n                        const cameras = devices.filter({\n                            \"NutriLensPage.useEffect.getCameras.cameras\": (device)=>device.kind === 'videoinput'\n                        }[\"NutriLensPage.useEffect.getCameras.cameras\"]);\n                        logDebug(\"Found \".concat(cameras.length, \" cameras:\"), cameras.map({\n                            \"NutriLensPage.useEffect.getCameras\": (c)=>c.label || 'unlabeled camera'\n                        }[\"NutriLensPage.useEffect.getCameras\"]));\n                        setCameraDevices(cameras);\n                        // Initial camera selection logic\n                        if (cameras.length > 0) {\n                            // Sort cameras - prefer back/environment facing cameras on mobile\n                            const sortedCameras = [\n                                ...cameras\n                            ].sort({\n                                \"NutriLensPage.useEffect.getCameras.sortedCameras\": (a, b)=>{\n                                    const labelA = (a.label || '').toLowerCase();\n                                    const labelB = (b.label || '').toLowerCase();\n                                    // Prioritize real cameras over virtual ones\n                                    const aIsVirtual = labelA.includes('obs') || labelA.includes('virtual');\n                                    const bIsVirtual = labelB.includes('obs') || labelB.includes('virtual');\n                                    if (aIsVirtual && !bIsVirtual) return 1;\n                                    if (!aIsVirtual && bIsVirtual) return -1;\n                                    // On mobile, prefer 'back', 'rear', or 'environment' cameras\n                                    const aIsBack = labelA.includes('back') || labelA.includes('rear') || labelA.includes('environment');\n                                    const bIsBack = labelB.includes('back') || labelB.includes('rear') || labelB.includes('environment');\n                                    if (aIsBack && !bIsBack) return -1;\n                                    if (!aIsBack && bIsBack) return 1;\n                                    return 0;\n                                }\n                            }[\"NutriLensPage.useEffect.getCameras.sortedCameras\"]);\n                            // Select the first camera after sorting\n                            const bestCamera = sortedCameras[0];\n                            logDebug(\"Selected camera: \".concat(bestCamera.label || 'unlabeled camera'));\n                            setSelectedCamera(bestCamera.deviceId);\n                        } else {\n                            logDebug('No cameras found');\n                            setError('No cameras detected on your device.');\n                        }\n                        // Start camera with a slight delay to allow state updates\n                        setTimeout({\n                            \"NutriLensPage.useEffect.getCameras\": ()=>{\n                                startCamera();\n                            }\n                        }[\"NutriLensPage.useEffect.getCameras\"], 500);\n                    } catch (err) {\n                        handleCameraError(err, 'getCameras');\n                    }\n                }\n            }[\"NutriLensPage.useEffect.getCameras\"];\n            getCameras();\n            return ({\n                \"NutriLensPage.useEffect\": ()=>{\n                    // Clean up camera on unmount\n                    stopCameraStream();\n                }\n            })[\"NutriLensPage.useEffect\"];\n        }\n    }[\"NutriLensPage.useEffect\"], []);\n    // Auto-start barcode scanner when camera is ready\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"NutriLensPage.useEffect\": ()=>{\n            let startScannerTimeout = null;\n            if (isCameraReady && !barcodeScannerIntervalRef.current && !barcodeScannerActive) {\n                logDebug('Camera is ready, auto-starting barcode scanner');\n                // Add a delay to make sure everything is fully initialized\n                startScannerTimeout = setTimeout({\n                    \"NutriLensPage.useEffect\": ()=>{\n                        logDebug('Auto-starting barcode scanner');\n                        if (!barcodeScannerIntervalRef.current) {\n                            setBarcodeScannerActive(true);\n                            startBarcodeScanner();\n                        }\n                    }\n                }[\"NutriLensPage.useEffect\"], 2000);\n            }\n            return ({\n                \"NutriLensPage.useEffect\": ()=>{\n                    if (startScannerTimeout) {\n                        clearTimeout(startScannerTimeout);\n                    }\n                }\n            })[\"NutriLensPage.useEffect\"];\n        }\n    }[\"NutriLensPage.useEffect\"], [\n        isCameraReady,\n        barcodeScannerActive\n    ]);\n    // Initialize barcode reader\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"NutriLensPage.useEffect\": ()=>{\n            // Initialize ZXing BrowserMultiFormatReader for barcode scanning\n            if (true) {\n                logDebug('Initializing barcode reader...');\n                // Dynamic import of the ZXing library\n                __webpack_require__.e(/*! import() */ \"_pages-dir-browser_node_modules_pnpm_zxing_browser_0_1_5__zxing_library_0_21_3_node_modules_z-b306a3\").then(__webpack_require__.bind(__webpack_require__, /*! @zxing/browser */ \"(pages-dir-browser)/./node_modules/.pnpm/@zxing+browser@0.1.5_@zxing+library@0.21.3/node_modules/@zxing/browser/esm/index.js\")).then({\n                    \"NutriLensPage.useEffect\": (param)=>{\n                        let { BrowserMultiFormatReader } = param;\n                        __webpack_require__.e(/*! import() */ \"_pages-dir-browser_node_modules_pnpm_zxing_library_0_21_3_node_modules_zxing_library_esm_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! @zxing/library */ \"(pages-dir-browser)/./node_modules/.pnpm/@zxing+library@0.21.3/node_modules/@zxing/library/esm/index.js\")).then({\n                            \"NutriLensPage.useEffect\": (param)=>{\n                                let { BarcodeFormat, DecodeHintType } = param;\n                                try {\n                                    // Configure hints to optimize for common barcode formats\n                                    const hints = new Map();\n                                    hints.set(DecodeHintType.POSSIBLE_FORMATS, [\n                                        BarcodeFormat.EAN_13,\n                                        BarcodeFormat.UPC_A,\n                                        BarcodeFormat.UPC_E,\n                                        BarcodeFormat.EAN_8,\n                                        BarcodeFormat.CODE_128,\n                                        BarcodeFormat.CODE_39,\n                                        BarcodeFormat.QR_CODE // Add QR code support\n                                    ]);\n                                    hints.set(DecodeHintType.TRY_HARDER, true);\n                                    hints.set(DecodeHintType.PURE_BARCODE, false); // Allow imperfect barcodes\n                                    // Create reader with optimized settings\n                                    const reader = new BrowserMultiFormatReader(hints, {\n                                        delayBetweenScanAttempts: 10,\n                                        delayBetweenScanSuccess: 500 // Shorter delay after successful scan\n                                    });\n                                    barcodeReaderRef.current = reader;\n                                    logDebug('Barcode reader initialized successfully with enhanced configuration');\n                                } catch (err) {\n                                    logDebug('Failed to initialize barcode reader', err);\n                                }\n                            }\n                        }[\"NutriLensPage.useEffect\"]).catch({\n                            \"NutriLensPage.useEffect\": (err)=>logDebug('Failed to import ZXing library', err)\n                        }[\"NutriLensPage.useEffect\"]);\n                    }\n                }[\"NutriLensPage.useEffect\"]).catch({\n                    \"NutriLensPage.useEffect\": (err)=>logDebug('Failed to import ZXing browser', err)\n                }[\"NutriLensPage.useEffect\"]);\n            }\n            // Clean up ZXing reader on unmount\n            return ({\n                \"NutriLensPage.useEffect\": ()=>{\n                    if (barcodeReaderRef.current) {\n                        try {\n                            barcodeReaderRef.current.reset();\n                            logDebug('Barcode reader reset');\n                        } catch (err) {\n                            logDebug('Error resetting barcode reader', err);\n                        }\n                    }\n                    if (barcodeScannerIntervalRef.current) {\n                        clearInterval(barcodeScannerIntervalRef.current);\n                        barcodeScannerIntervalRef.current = null;\n                        logDebug('Barcode scanner interval cleared');\n                    }\n                    stopCameraStream();\n                }\n            })[\"NutriLensPage.useEffect\"];\n        }\n    }[\"NutriLensPage.useEffect\"], []);\n    // Comprehensive camera initialization function\n    const startCamera = async ()=>{\n        // If already streaming, stop it first\n        stopCameraStream();\n        try {\n            // Clear any previous errors and update status\n            setError(null);\n            setCameraStatus('initializing');\n            logDebug('Starting camera initialization process');\n            // Double check API support\n            if (!checkCameraSupport()) {\n                return;\n            }\n            // Safari/iOS specific fixes\n            const browser = detectBrowser();\n            const isiOS = browser.os === 'iOS';\n            const isSafari = browser.name === 'Safari';\n            // Get appropriate constraints based on device/browser\n            const createConstraints = function(deviceId) {\n                let quality = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'high';\n                const constraints = {\n                    audio: false,\n                    video: {}\n                };\n                const videoConstraints = {};\n                // Set device ID if provided\n                if (deviceId) {\n                    videoConstraints.deviceId = {\n                        exact: deviceId\n                    };\n                }\n                // Set facingMode to 'environment' for mobile devices as fallback\n                if (!deviceId && browser.mobile) {\n                    videoConstraints.facingMode = {\n                        ideal: 'environment'\n                    };\n                }\n                // Set resolution based on quality\n                switch(quality){\n                    case 'high':\n                        videoConstraints.width = {\n                            ideal: 1280\n                        };\n                        videoConstraints.height = {\n                            ideal: 720\n                        };\n                        break;\n                    case 'medium':\n                        videoConstraints.width = {\n                            ideal: 640\n                        };\n                        videoConstraints.height = {\n                            ideal: 480\n                        };\n                        break;\n                    case 'low':\n                        videoConstraints.width = {\n                            ideal: 320\n                        };\n                        videoConstraints.height = {\n                            ideal: 240\n                        };\n                        break;\n                    case 'minimal':\n                        break;\n                }\n                constraints.video = videoConstraints;\n                return constraints;\n            };\n            // Progressive fallback strategy\n            const tryGetStream = async ()=>{\n                const attempts = [\n                    // 1. Try with selected camera at high quality\n                    {\n                        desc: 'selected camera (high quality)',\n                        fn: async ()=>{\n                            if (!selectedCamera) throw new Error('No camera selected');\n                            return navigator.mediaDevices.getUserMedia(createConstraints(selectedCamera, 'high'));\n                        }\n                    },\n                    // 2. Try with selected camera at medium quality\n                    {\n                        desc: 'selected camera (medium quality)',\n                        fn: async ()=>{\n                            if (!selectedCamera) throw new Error('No camera selected');\n                            return navigator.mediaDevices.getUserMedia(createConstraints(selectedCamera, 'medium'));\n                        }\n                    },\n                    // 3. Try with environment facing camera\n                    {\n                        desc: 'environment facing camera',\n                        fn: async ()=>{\n                            return navigator.mediaDevices.getUserMedia({\n                                video: {\n                                    facingMode: 'environment'\n                                },\n                                audio: false\n                            });\n                        }\n                    },\n                    // 4. Try with any camera\n                    {\n                        desc: 'any camera',\n                        fn: async ()=>{\n                            return navigator.mediaDevices.getUserMedia({\n                                video: true,\n                                audio: false\n                            });\n                        }\n                    },\n                    // 5. Safari/iOS specific attempt\n                    {\n                        desc: 'iOS/Safari specific',\n                        fn: async ()=>{\n                            // Special handling for Safari and iOS\n                            if (isiOS || isSafari) {\n                                return navigator.mediaDevices.getUserMedia({\n                                    video: {\n                                        facingMode: 'environment',\n                                        width: {\n                                            ideal: 320\n                                        },\n                                        height: {\n                                            ideal: 240\n                                        }\n                                    },\n                                    audio: false\n                                });\n                            }\n                            throw new Error('Not Safari/iOS');\n                        }\n                    },\n                    // 6. Last resort - minimal constraints\n                    {\n                        desc: 'minimal constraints',\n                        fn: async ()=>{\n                            return navigator.mediaDevices.getUserMedia({\n                                video: {},\n                                audio: false\n                            });\n                        }\n                    }\n                ];\n                // Try each method in sequence until one works\n                for (const attempt of attempts){\n                    try {\n                        logDebug(\"Trying camera with \".concat(attempt.desc));\n                        const stream = await attempt.fn();\n                        logDebug(\"Successfully got camera stream with \".concat(attempt.desc));\n                        return stream;\n                    } catch (err) {\n                        logDebug(\"Failed with \".concat(attempt.desc, \":\"), err);\n                    // Continue to next attempt\n                    }\n                }\n                // If we get here, all attempts failed\n                throw new Error('All camera initialization attempts failed');\n            };\n            // Start the camera with our progressive strategy\n            const stream = await tryGetStream();\n            // Handle the successful stream\n            if (videoRef.current) {\n                videoRef.current.srcObject = stream;\n                streamRef.current = stream;\n                // Safari/iOS sometimes needs a specific playsinline attribute\n                videoRef.current.setAttribute('playsinline', 'true');\n                videoRef.current.setAttribute('webkit-playsinline', 'true');\n                // Set up event handlers for video element\n                videoRef.current.onloadedmetadata = ()=>{\n                    logDebug('Video metadata loaded');\n                    if (videoRef.current) {\n                        videoRef.current.play().then(()=>{\n                            logDebug('Camera video playback started');\n                            setCameraStatus('active');\n                            setIsCameraReady(true);\n                            // Get video track info for debugging\n                            const videoTracks = stream.getVideoTracks();\n                            if (videoTracks.length > 0) {\n                                const settings = videoTracks[0].getSettings();\n                                logDebug('Video track settings:', settings);\n                            }\n                        }).catch((e)=>{\n                            handleCameraError(e, 'video.play');\n                        });\n                    }\n                };\n                videoRef.current.onerror = (e)=>{\n                    handleCameraError(e, 'video.error');\n                };\n            } else {\n                throw new Error('Video element not available');\n            }\n        } catch (err) {\n            handleCameraError(err, 'startCamera');\n        }\n    };\n    // Track when camera is ready to use\n    // Effect for camera setup and cleanup\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"NutriLensPage.useEffect\": ()=>{\n            // Initialization logic\n            if (selectedCamera) {\n                startCamera();\n            }\n            // Cleanup function\n            return ({\n                \"NutriLensPage.useEffect\": ()=>{\n                    // Clean up barcode scanner\n                    if (barcodeScannerIntervalRef.current) {\n                        clearInterval(barcodeScannerIntervalRef.current);\n                        barcodeScannerIntervalRef.current = null;\n                    }\n                    // Clean up camera stream\n                    if (streamRef.current) {\n                        const tracks = streamRef.current.getTracks();\n                        tracks.forEach({\n                            \"NutriLensPage.useEffect\": (track)=>{\n                                console.log('Camera track stopped');\n                                track.stop();\n                            }\n                        }[\"NutriLensPage.useEffect\"]);\n                        streamRef.current = null;\n                    }\n                    // Clean up barcode reader\n                    if (barcodeReaderRef.current) {\n                        try {\n                            barcodeReaderRef.current.reset();\n                        } catch (err) {\n                            console.warn('Error resetting barcode reader:', err);\n                        }\n                    }\n                }\n            })[\"NutriLensPage.useEffect\"];\n        }\n    }[\"NutriLensPage.useEffect\"], [\n        selectedCamera\n    ]);\n    // Initialize custom barcode scanner\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"NutriLensPage.useEffect\": ()=>{\n            console.log('Custom barcode scanner initialized');\n            console.log('Native barcode support:', _utils_barcodeScanner__WEBPACK_IMPORTED_MODULE_3__.barcodeScanner.isNativeSupported());\n            console.log('Supported formats:', _utils_barcodeScanner__WEBPACK_IMPORTED_MODULE_3__.barcodeScanner.getSupportedFormats());\n            // No cleanup needed as our scanner is stateless\n            return ({\n                \"NutriLensPage.useEffect\": ()=>{\n                    console.log('Barcode scanner cleanup');\n                }\n            })[\"NutriLensPage.useEffect\"];\n        }\n    }[\"NutriLensPage.useEffect\"], []);\n    // Custom barcode scanner with improved reliability\n    const startBarcodeScanner = ()=>{\n        // Prevent multiple scanner instances\n        if (barcodeScannerIntervalRef.current) {\n            console.log('Barcode scanner already running, not starting again');\n            return;\n        }\n        if (!videoRef.current || !streamRef.current) {\n            setError('Camera not initialized');\n            return;\n        }\n        setBarcodeScannerActive(true);\n        setError(null);\n        console.log('Starting custom barcode scanner with 100ms interval...');\n        console.log('Native barcode support:', _utils_barcodeScanner__WEBPACK_IMPORTED_MODULE_3__.barcodeScanner.isNativeSupported());\n        // Use our custom scanner with both video and canvas methods\n        barcodeScannerIntervalRef.current = window.setInterval(async ()=>{\n            try {\n                if (!videoRef.current || !streamRef.current || !canvasRef.current) return;\n                // Check if video is ready and playing\n                if (videoRef.current.readyState < 2 || videoRef.current.paused) return;\n                const video = videoRef.current;\n                const canvas = canvasRef.current;\n                const context = canvas.getContext('2d', {\n                    willReadFrequently: true\n                });\n                if (!context) return;\n                // Set canvas size to match video\n                canvas.width = video.videoWidth;\n                canvas.height = video.videoHeight;\n                // Draw current video frame to canvas\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\n                let barcode = null;\n                try {\n                    // Try canvas-based scanning first\n                    barcode = await _utils_barcodeScanner__WEBPACK_IMPORTED_MODULE_3__.barcodeScanner.scanFromCanvas(canvas);\n                    // If canvas scanning fails, try video-based scanning\n                    if (!barcode) {\n                        barcode = await _utils_barcodeScanner__WEBPACK_IMPORTED_MODULE_3__.barcodeScanner.scanFromVideo(video);\n                    }\n                } catch (scanError) {\n                    // Only log significant errors\n                    if (scanError && scanError.message && (scanError.message.includes('is not a function') || scanError.message.includes('TypeError') || scanError.message.includes('Cannot read'))) {\n                        console.error('Barcode scan error:', scanError.message);\n                    }\n                // Silently ignore expected 'not found' barcode errors\n                }\n                // Process successful barcode detection\n                if (barcode && barcode.length > 0) {\n                    console.log('✅ Barcode detected:', barcode);\n                    if (barcode !== lastBarcode) {\n                        console.log('🔍 New barcode found:', barcode);\n                        setLastBarcode(barcode);\n                        stopBarcodeScanner();\n                        await lookupBarcodeProduct(barcode);\n                    }\n                }\n            } catch (err) {\n                // Only log unexpected errors\n                console.warn('Barcode scanning error:', err);\n            }\n        }, 500); // Scan 2 times per second for better ZXing reliability\n    };\n    // Stop barcode scanner\n    const stopBarcodeScanner = ()=>{\n        if (barcodeScannerIntervalRef.current) {\n            clearInterval(barcodeScannerIntervalRef.current);\n            barcodeScannerIntervalRef.current = null;\n            console.log('Barcode scanner stopped');\n        }\n        setBarcodeScannerActive(false);\n    };\n    // Capture image from camera feed\n    const captureImage = ()=>{\n        if (!videoRef.current || !canvasRef.current) {\n            setError('Camera not initialized');\n            return;\n        }\n        const video = videoRef.current;\n        const canvas = canvasRef.current;\n        const context = canvas.getContext('2d');\n        if (!context) {\n            setError('Could not get canvas context');\n            return;\n        }\n        try {\n            console.log('Capturing image from camera...');\n            // Ensure video is playing and has dimensions\n            if (video.videoWidth === 0 || video.videoHeight === 0) {\n                console.error('Video has zero dimensions. Video state:', {\n                    readyState: video.readyState,\n                    videoWidth: video.videoWidth,\n                    videoHeight: video.videoHeight,\n                    paused: video.paused\n                });\n                setError('Camera stream not ready. Please wait a moment and try again.');\n                return;\n            }\n            // Set canvas dimensions to match video\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n            console.log(\"Canvas set to \".concat(canvas.width, \"x\").concat(canvas.height));\n            // Draw current video frame to canvas\n            context.drawImage(video, 0, 0, canvas.width, canvas.height);\n            console.log('Video frame drawn to canvas');\n            // Convert canvas to blob with error handling\n            canvas.toBlob(async (blob)=>{\n                if (!blob) {\n                    console.error('Failed to create blob from canvas');\n                    setError('Failed to capture image: Could not create image data');\n                    return;\n                }\n                console.log(\"Captured image blob size: \".concat(blob.size, \" bytes\"));\n                try {\n                    // Create a File object from the blob\n                    const imageFile = new File([\n                        blob\n                    ], 'food.jpg', {\n                        type: 'image/jpeg'\n                    });\n                    // Create URL for preview image\n                    const previewUrl = URL.createObjectURL(blob);\n                    setCapturedImageUrl(previewUrl);\n                    console.log('Preview image URL created');\n                    // Analyze the image\n                    await analyzeImageFood(imageFile);\n                } catch (err) {\n                    console.error('Error processing captured image:', err);\n                    setError(\"Failed to process captured image: \".concat(err instanceof Error ? err.message : 'Unknown error'));\n                }\n            }, 'image/jpeg', 0.95 // 95% quality JPEG\n            );\n        } catch (err) {\n            console.error('Error during image capture:', err);\n            setError(\"Failed to capture image: \".concat(err instanceof Error ? err.message : 'Unknown error'));\n        }\n    };\n    // Look up product by barcode\n    const lookupBarcodeProduct = async (barcode)=>{\n        setIsLoading(true);\n        setError(null);\n        setScanSource('Barcode');\n        try {\n            console.log(\"Looking up product for barcode: \".concat(barcode));\n            // Call the barcode lookup API\n            const response = await fetch(\"/api/spoonacular/product/\".concat(barcode), {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n            if (!response.ok) {\n                const errorText = await response.text();\n                throw new Error(\"API error (\".concat(response.status, \"): \").concat(errorText));\n            }\n            const data = await response.json();\n            console.log('Barcode product data:', data);\n            // Handle Spoonacular API response structure directly\n            if (data && data.title) {\n                var _data_aisle;\n                // Extract nutrition values from Spoonacular product data\n                const nutrition = data.nutrition || {};\n                const nutrients = nutrition.nutrients || [];\n                // Helper function to find nutrient by name\n                const findNutrient = (name)=>{\n                    const nutrient = nutrients.find((n)=>{\n                        var _n_name;\n                        return (_n_name = n.name) === null || _n_name === void 0 ? void 0 : _n_name.toLowerCase().includes(name.toLowerCase());\n                    });\n                    return (nutrient === null || nutrient === void 0 ? void 0 : nutrient.amount) || 0;\n                };\n                // Format the nutrition data from the Spoonacular product\n                const nutritionInfo = {\n                    foodName: data.title || 'Unknown Product',\n                    healthScore: data.spoonacularScore || 50,\n                    calories: findNutrient('calories'),\n                    protein: findNutrient('protein'),\n                    carbs: findNutrient('carbohydrates'),\n                    fat: findNutrient('fat'),\n                    fiber: findNutrient('fiber'),\n                    sugar: findNutrient('sugar'),\n                    sodium: findNutrient('sodium'),\n                    healthBenefits: [\n                        'Product information from barcode scan'\n                    ],\n                    allergens: ((_data_aisle = data.aisle) === null || _data_aisle === void 0 ? void 0 : _data_aisle.split(',')) || [],\n                    recommendations: \"This product is available in the \".concat(data.aisle || 'store', \". Check nutritional values for dietary planning.\"),\n                    inflammatoryIndex: 0,\n                    glycemicLoad: 0,\n                    nutrientDensity: Math.round((data.spoonacularScore || 50) / 10),\n                    grokAnalysis: '',\n                    enhancedBy: 'Barcode Scan via Spoonacular API',\n                    detectedFoodItems: [\n                        {\n                            name: data.title || 'Unknown Product',\n                            confidence: 1.0,\n                            portion: 'serving'\n                        }\n                    ]\n                };\n                // Set nutrition data\n                setNutritionData(nutritionInfo);\n                console.log('✅ Product data processed successfully:', nutritionInfo.foodName);\n            } else {\n                throw new Error('Product not found or invalid barcode');\n            }\n        } catch (err) {\n            console.error('Error looking up barcode:', err);\n            setError(\"Failed to lookup barcode product: \".concat(err.message || 'Unknown error'));\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Function to analyze food images with real APIs only (no fallbacks)\n    const analyzeImageFood = async (imageFile)=>{\n        setIsLoading(true);\n        setError(null);\n        setScanSource('AI Vision');\n        try {\n            var _nutritionalData_nutritionalEstimate, _String_match, _nutritionalData_nutritionalEstimate1, _String_match1, _nutritionalData_nutritionalEstimate2, _String_match2, _nutritionalData_nutritionalEstimate3, _nutritionalData_nutritionalEstimate4, _nutritionalData_nutritionalEstimate5, _nutritionalData_nutritionalEstimate6;\n            console.log('Starting image analysis...');\n            // Convert file to base64\n            const base64Image = await new Promise((resolve)=>{\n                const reader = new FileReader();\n                reader.onload = ()=>{\n                    const base64String = reader.result;\n                    resolve(base64String); // Keep the complete data URL format with prefix\n                };\n                reader.readAsDataURL(imageFile);\n            });\n            console.log('Image converted to base64, sending to AI analysis endpoint');\n            // Call the AI analysis endpoint - no fallbacks, only real API\n            const response = await fetch('/api/ai-analyze-food', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    image: base64Image\n                })\n            });\n            if (!response.ok) {\n                const errorData = await response.text();\n                console.error('API analysis failed with status:', response.status);\n                throw new Error(\"API error (\".concat(response.status, \"): \").concat(errorData));\n            }\n            const result = await response.json();\n            console.log('Successfully received AI analysis result:', result);\n            if (!result.success || !result.foodItems || result.foodItems.length === 0) {\n                throw new Error('Invalid API response: missing food item data');\n            }\n            // Get the primary food (first detected item)\n            const primaryFood = result.foodItems[0];\n            // Store all detected foods\n            setDetectedFoods(result.foodItems);\n            // Extract nutritional data from the API response\n            const nutritionalData = result.nutritionalData || {};\n            // Perform detailed nutritional analysis with health focus\n            const detailedAllergens = enhanceAllergenDetection(nutritionalData.allergens || [], primaryFood.name);\n            const detailedHealthBenefits = enhanceHealthBenefits(nutritionalData);\n            const healthRecommendations = generateHealthRecommendations(nutritionalData, detailedAllergens);\n            const nutritionInfo = {\n                foodName: primaryFood.name || 'Unknown Food',\n                healthScore: calculateHealthScore(nutritionalData),\n                // Use API data only - no fallbacks to simulated data\n                calories: ((_nutritionalData_nutritionalEstimate = nutritionalData.nutritionalEstimate) === null || _nutritionalData_nutritionalEstimate === void 0 ? void 0 : _nutritionalData_nutritionalEstimate.calories) || 0,\n                protein: Number(((_String_match = String(((_nutritionalData_nutritionalEstimate1 = nutritionalData.nutritionalEstimate) === null || _nutritionalData_nutritionalEstimate1 === void 0 ? void 0 : _nutritionalData_nutritionalEstimate1.protein) || '0').match(/\\d+/)) === null || _String_match === void 0 ? void 0 : _String_match[0]) || 0),\n                carbs: Number(((_String_match1 = String(((_nutritionalData_nutritionalEstimate2 = nutritionalData.nutritionalEstimate) === null || _nutritionalData_nutritionalEstimate2 === void 0 ? void 0 : _nutritionalData_nutritionalEstimate2.carbs) || '0').match(/\\d+/)) === null || _String_match1 === void 0 ? void 0 : _String_match1[0]) || 0),\n                fat: Number(((_String_match2 = String(((_nutritionalData_nutritionalEstimate3 = nutritionalData.nutritionalEstimate) === null || _nutritionalData_nutritionalEstimate3 === void 0 ? void 0 : _nutritionalData_nutritionalEstimate3.fat) || '0').match(/\\d+/)) === null || _String_match2 === void 0 ? void 0 : _String_match2[0]) || 0),\n                fiber: Number(((_nutritionalData_nutritionalEstimate4 = nutritionalData.nutritionalEstimate) === null || _nutritionalData_nutritionalEstimate4 === void 0 ? void 0 : _nutritionalData_nutritionalEstimate4.fiber) || 0),\n                sugar: Number(((_nutritionalData_nutritionalEstimate5 = nutritionalData.nutritionalEstimate) === null || _nutritionalData_nutritionalEstimate5 === void 0 ? void 0 : _nutritionalData_nutritionalEstimate5.sugar) || 0),\n                sodium: Number(((_nutritionalData_nutritionalEstimate6 = nutritionalData.nutritionalEstimate) === null || _nutritionalData_nutritionalEstimate6 === void 0 ? void 0 : _nutritionalData_nutritionalEstimate6.sodium) || 0),\n                healthBenefits: detailedHealthBenefits,\n                allergens: detailedAllergens,\n                recommendations: healthRecommendations,\n                // Additional health-focused data\n                inflammatoryIndex: calculateInflammatoryIndex(nutritionalData),\n                glycemicLoad: calculateGlycemicLoad(nutritionalData),\n                nutrientDensity: calculateNutrientDensity(nutritionalData),\n                // Grok AI analysis data\n                grokAnalysis: result.detailedAnalysis || '',\n                enhancedBy: nutritionalData.enhancedBy || 'Grok & Modal APIs',\n                detectedFoodItems: result.foodItems || [\n                    primaryFood\n                ]\n            };\n            setNutritionData(nutritionInfo);\n        } catch (err) {\n            console.error('Error analyzing food:', err);\n            setError(\"Failed to analyze food: \".concat(err.message || 'Unknown error'));\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Helper functions for enhanced food analysis\n    const getCommonAllergensForFood = (foodName)=>{\n        // AI-powered allergen detection based on food characteristics\n        const foodLower = foodName.toLowerCase();\n        const allergenMap = {\n            'dairy': [\n                'milk',\n                'cheese',\n                'yogurt',\n                'cream',\n                'butter',\n                'ice cream'\n            ],\n            'gluten': [\n                'bread',\n                'pasta',\n                'wheat',\n                'cereal',\n                'cake',\n                'cookie'\n            ],\n            'nuts': [\n                'almond',\n                'pecan',\n                'walnut',\n                'cashew',\n                'pistachio',\n                'hazelnut',\n                'peanut'\n            ],\n            'shellfish': [\n                'shrimp',\n                'crab',\n                'lobster',\n                'scallop',\n                'clam',\n                'oyster'\n            ],\n            'soy': [\n                'tofu',\n                'soya',\n                'edamame',\n                'miso',\n                'tempeh'\n            ],\n            'egg': [\n                'egg',\n                'omelette',\n                'mayonnaise'\n            ]\n        };\n        const detectedAllergens = [];\n        // Scan for each allergen category based on food name\n        Object.entries(allergenMap).forEach((param)=>{\n            let [allergen, keywords] = param;\n            if (keywords.some((keyword)=>foodLower.includes(keyword))) {\n                detectedAllergens.push(allergen);\n            }\n        });\n        return detectedAllergens;\n    };\n    const analyzeHealthImpacts = (food)=>{\n        var _food_name;\n        const impacts = [];\n        const foodLower = ((_food_name = food.name) === null || _food_name === void 0 ? void 0 : _food_name.toLowerCase()) || '';\n        // AI-powered health impact analysis\n        if (foodLower.includes('vegetable') || foodLower.includes('greens') || foodLower.includes('broccoli') || foodLower.includes('spinach')) {\n            impacts.push('High in antioxidants');\n            impacts.push('Supports immune function');\n        }\n        if (foodLower.includes('berry') || foodLower.includes('fruit') || foodLower.includes('apple')) {\n            impacts.push('Contains natural phytochemicals');\n            impacts.push('Provides dietary fiber');\n        }\n        // Add default health impacts if none detected\n        if (impacts.length === 0) {\n            impacts.push('Contains various nutrients');\n        }\n        return impacts;\n    };\n    const enhanceAllergenDetection = (baseAllergens, foodName)=>{\n        // Start with any allergens detected by the API\n        const enhancedAllergens = [\n            ...baseAllergens\n        ];\n        // Add any additional allergens detected through our local analysis\n        const additionalAllergens = getCommonAllergensForFood(foodName);\n        // Combine and deduplicate\n        additionalAllergens.forEach((allergen)=>{\n            if (!enhancedAllergens.includes(allergen)) {\n                enhancedAllergens.push(allergen);\n            }\n        });\n        return enhancedAllergens;\n    };\n    const enhanceHealthBenefits = (food)=>{\n        var _food_name;\n        const benefits = [];\n        const foodLower = ((_food_name = food.name) === null || _food_name === void 0 ? void 0 : _food_name.toLowerCase()) || '';\n        // Determine health benefits based on food type\n        if (foodLower.includes('vegetable') || foodLower.includes('greens')) {\n            benefits.push('Rich in vitamins and minerals');\n            benefits.push('High in dietary fiber');\n            benefits.push('Low calorie density');\n        } else if (foodLower.includes('fruit')) {\n            benefits.push('Contains natural antioxidants');\n            benefits.push('Source of vitamin C');\n            benefits.push('Provides natural sugars for energy');\n        } else if (foodLower.includes('fish') || foodLower.includes('salmon')) {\n            benefits.push('High in omega-3 fatty acids');\n            benefits.push('Complete protein source');\n            benefits.push('Contains vitamin D');\n        } else {\n            benefits.push('Contains essential nutrients');\n        }\n        return benefits;\n    };\n    const generateHealthRecommendations = (food, allergens)=>{\n        var _food_name;\n        let recommendation = '';\n        const foodLower = ((_food_name = food.name) === null || _food_name === void 0 ? void 0 : _food_name.toLowerCase()) || '';\n        // Generate personalized recommendations\n        if (allergens.length > 0) {\n            recommendation += \"Caution: This food may contain \".concat(allergens.join(', '), \". \");\n        }\n        // Food-specific recommendations\n        if (foodLower.includes('vegetable') || foodLower.includes('fruit')) {\n            recommendation += 'Excellent choice for daily nutrition! Rich in vitamins and fiber.';\n        } else if (foodLower.includes('protein') || foodLower.includes('meat') || foodLower.includes('fish')) {\n            recommendation += 'Good protein source. Try to balance with vegetables and whole grains.';\n        } else if (foodLower.includes('dessert') || foodLower.includes('cake') || foodLower.includes('sweet')) {\n            recommendation += 'Enjoy in moderation. High in sugar and calories.';\n        } else {\n            recommendation += 'Consider the nutritional profile and how it fits into your overall diet.';\n        }\n        return recommendation;\n    };\n    const calculateHealthScore = (food)=>{\n        var _food_name;\n        let score = 50; // Default starting score\n        const foodLower = ((_food_name = food.name) === null || _food_name === void 0 ? void 0 : _food_name.toLowerCase()) || '';\n        // Adjust score based on food type\n        if (foodLower.includes('vegetable') || foodLower.includes('greens')) {\n            score += 30;\n        } else if (foodLower.includes('fruit')) {\n            score += 25;\n        } else if (foodLower.includes('whole grain')) {\n            score += 20;\n        } else if (foodLower.includes('processed') || foodLower.includes('junk')) {\n            score -= 20;\n        }\n        // Cap the score between 0 and 100\n        return Math.max(0, Math.min(100, score));\n    };\n    const calculateInflammatoryIndex = (food)=>{\n        var _food_name;\n        let index = 0; // Neutral starting point\n        const foodLower = ((_food_name = food.name) === null || _food_name === void 0 ? void 0 : _food_name.toLowerCase()) || '';\n        // Calculate inflammatory index (-5 to 5, negative is anti-inflammatory)\n        if (foodLower.includes('vegetable') || foodLower.includes('berry') || foodLower.includes('omega')) {\n            index -= 3; // Anti-inflammatory\n        } else if (foodLower.includes('sugar') || foodLower.includes('processed')) {\n            index += 3; // Pro-inflammatory\n        }\n        return index;\n    };\n    const calculateGlycemicLoad = (food)=>{\n        var _food_name, _food_portion;\n        let baseGL = 10; // Default medium glycemic load\n        const foodLower = ((_food_name = food.name) === null || _food_name === void 0 ? void 0 : _food_name.toLowerCase()) || '';\n        // Adjust based on carb content and type\n        if (foodLower.includes('sugar') || foodLower.includes('candy') || foodLower.includes('white bread')) {\n            baseGL = 25; // High GL\n        } else if (foodLower.includes('whole grain') || foodLower.includes('bean') || foodLower.includes('lentil')) {\n            baseGL = 5; // Low GL\n        } else if (foodLower.includes('vegetable') && !foodLower.includes('potato')) {\n            baseGL = 3; // Very low GL\n        } else if (foodLower.includes('meat') || foodLower.includes('fish')) {\n            baseGL = 0; // No carbs\n        }\n        // Further adjust based on portion/serving size if available\n        const portion = ((_food_portion = food.portion) === null || _food_portion === void 0 ? void 0 : _food_portion.toLowerCase()) || '';\n        if (portion.includes('large') || portion.includes('big')) {\n            baseGL *= 1.5;\n        } else if (portion.includes('small')) {\n            baseGL *= 0.7;\n        }\n        return Math.round(baseGL);\n    };\n    const calculateNutrientDensity = (food)=>{\n        var _food_name;\n        let density = 5; // Default medium nutrient density (1-10 scale)\n        const foodLower = ((_food_name = food.name) === null || _food_name === void 0 ? void 0 : _food_name.toLowerCase()) || '';\n        // Calculate nutrient density score based on food type\n        if (foodLower.includes('vegetable') || foodLower.includes('greens') || foodLower.includes('spinach')) {\n            density = 9; // Very high nutrient density\n        } else if (foodLower.includes('fruit') || foodLower.includes('berry')) {\n            density = 8; // High nutrient density\n        } else if (foodLower.includes('whole grain') || foodLower.includes('bean')) {\n            density = 7; // Good nutrient density\n        } else if (foodLower.includes('processed') || foodLower.includes('junk') || foodLower.includes('candy')) {\n            density = 2; // Low nutrient density\n        }\n        return density;\n    };\n    const handleCameraChange = (event)=>{\n        setSelectedCamera(event.target.value);\n    };\n    const resetResults = ()=>{\n        console.log('Resetting results and reinitializing camera...');\n        // Clear results state\n        setNutritionData(null);\n        setCapturedImageUrl(undefined);\n        setDetectedFoods([]);\n        setError(null);\n        setIsLoading(false);\n        // Reset camera status\n        setCameraStatus('initializing');\n        setIsCameraReady(false);\n        // Stop any active barcode scanner\n        if (barcodeScannerIntervalRef.current) {\n            clearInterval(barcodeScannerIntervalRef.current);\n            barcodeScannerIntervalRef.current = null;\n        }\n        setBarcodeScannerActive(false);\n        setLastBarcode(null);\n        // Reinitialize camera if we have a selected camera\n        if (selectedCamera) {\n            console.log('Reinitializing camera with device:', selectedCamera);\n            // Small delay to ensure state is updated\n            setTimeout(()=>{\n                startCamera();\n            }, 100);\n        } else {\n            // If no camera selected, force camera reload\n            console.log('No camera selected, forcing camera reload...');\n            // This will trigger the camera enumeration and start process again\n            setSelectedCamera('');\n            setCameraStatus('initializing');\n        }\n    };\n    const handleFileUpload = (event)=>{\n        if (event.target.files && event.target.files[0]) {\n            const file = event.target.files[0];\n            const previewUrl = URL.createObjectURL(file);\n            setCapturedImageUrl(previewUrl);\n            setScanSource('Uploaded Image');\n            // Analyze the uploaded image\n            analyzeImageFood(file);\n        }\n        // Reset file input\n        if (fileInputRef.current) {\n            fileInputRef.current.value = '';\n        }\n    };\n    const getConfidenceColor = (confidence)=>{\n        if (confidence > 0.8) return 'text-green-600';\n        if (confidence > 0.5) return 'text-yellow-600';\n        return 'text-red-600';\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"nutrilens-container\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"scanner-header\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        children: \"NutriLens Food Scanner\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                        lineNumber: 1156,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"Scan food items to get detailed nutrition information\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                        lineNumber: 1157,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                lineNumber: 1155,\n                columnNumber: 7\n            }, undefined),\n            nutritionData ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"captured-image\",\n                        children: capturedImageUrl && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                    src: capturedImageUrl,\n                                    alt: \"Captured food\",\n                                    className: \"food-image\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                    lineNumber: 1165,\n                                    columnNumber: 17\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"image-source\",\n                                    children: scanSource\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                    lineNumber: 1166,\n                                    columnNumber: 17\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                            lineNumber: 1164,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                        lineNumber: 1162,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ScanResults__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                        data: nutritionData,\n                        onReset: ()=>{\n                            setNutritionData(null);\n                            setError(null);\n                            setDetectedFoods([]);\n                            setCapturedImageUrl(undefined);\n                        },\n                        imageUrl: capturedImageUrl,\n                        scanSource: \"camera\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                        lineNumber: 1171,\n                        columnNumber: 11\n                    }, undefined),\n                    detectedFoods.length > 1 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"additional-foods\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                children: \"Also Detected:\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                lineNumber: 1185,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"detected-foods-list\",\n                                children: detectedFoods.slice(1).map((food, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"detected-food-item\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: food.name\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                                lineNumber: 1189,\n                                                columnNumber: 21\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: getConfidenceColor(food.confidence),\n                                                children: [\n                                                    Math.round(food.confidence * 100),\n                                                    \"%\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                                lineNumber: 1190,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        ]\n                                    }, index, true, {\n                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                        lineNumber: 1188,\n                                        columnNumber: 19\n                                    }, undefined))\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                lineNumber: 1186,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                        lineNumber: 1184,\n                        columnNumber: 13\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"action-buttons\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"button-group\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: \"btn btn-primary\",\n                                onClick: resetResults,\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Barcode_Camera_CameraOff_ChevronDown_RefreshCcw_Upload_lucide_react__WEBPACK_IMPORTED_MODULE_4__.Camera, {\n                                        size: 18\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                        lineNumber: 1205,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    \"Scan Another Item\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                lineNumber: 1201,\n                                columnNumber: 15\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                            lineNumber: 1200,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                        lineNumber: 1199,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"card\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"card-header\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: \"Camera Feed\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                        lineNumber: 1215,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"select-container\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                                value: selectedCamera,\n                                                onChange: (e)=>setSelectedCamera(e.target.value),\n                                                className: \"select-styled\",\n                                                disabled: cameraDevices.length === 0 || isLoading,\n                                                children: cameraDevices.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                    value: \"\",\n                                                    children: \"No cameras available\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                                    lineNumber: 1224,\n                                                    columnNumber: 21\n                                                }, undefined) : cameraDevices.map((device)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                        value: device.deviceId,\n                                                        children: device.label || \"Camera \".concat(device.deviceId.substr(0, 5), \"...\")\n                                                    }, device.deviceId, false, {\n                                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                                        lineNumber: 1227,\n                                                        columnNumber: 23\n                                                    }, undefined))\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                                lineNumber: 1217,\n                                                columnNumber: 17\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Barcode_Camera_CameraOff_ChevronDown_RefreshCcw_Upload_lucide_react__WEBPACK_IMPORTED_MODULE_4__.ChevronDown, {\n                                                size: 16,\n                                                className: \"select-icon\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                                lineNumber: 1233,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                        lineNumber: 1216,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                lineNumber: 1214,\n                                columnNumber: 13\n                            }, undefined),\n                            error ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"error-container\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Barcode_Camera_CameraOff_ChevronDown_RefreshCcw_Upload_lucide_react__WEBPACK_IMPORTED_MODULE_4__.CameraOff, {\n                                        size: 48,\n                                        className: \"error-icon\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                        lineNumber: 1239,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        children: \"Camera Error\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                        lineNumber: 1240,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        children: error\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                        lineNumber: 1241,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        className: \"retry-button\",\n                                        onClick: ()=>{\n                                            setError(null);\n                                            // Re-initialize camera\n                                            if (selectedCamera) {\n                                                // This will trigger the useEffect to restart camera\n                                                const currentCamera = selectedCamera;\n                                                setSelectedCamera('');\n                                                setTimeout(()=>setSelectedCamera(currentCamera), 100);\n                                            }\n                                        },\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Barcode_Camera_CameraOff_ChevronDown_RefreshCcw_Upload_lucide_react__WEBPACK_IMPORTED_MODULE_4__.RefreshCcw, {\n                                                size: 16\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                                lineNumber: 1255,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            \"Retry\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                        lineNumber: 1242,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                lineNumber: 1238,\n                                columnNumber: 15\n                            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"camera-container\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"video\", {\n                                        ref: videoRef,\n                                        autoPlay: true,\n                                        playsInline: true,\n                                        className: \"camera-feed\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                        lineNumber: 1261,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                                        ref: canvasRef,\n                                        className: \"hidden\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                        lineNumber: 1267,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"camera-overlay\",\n                                        children: [\n                                            barcodeScannerActive && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"barcode-scanner-indicator\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: \"scan-line\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                                        lineNumber: 1272,\n                                                        columnNumber: 23\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: \"scanning-text\",\n                                                        children: \"Scanning for barcodes...\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                                        lineNumber: 1273,\n                                                        columnNumber: 23\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                                lineNumber: 1271,\n                                                columnNumber: 21\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"camera-status\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: \"status-indicator\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                                        lineNumber: 1278,\n                                                        columnNumber: 21\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        children: barcodeScannerActive ? 'Barcode Scanner Active' : 'Camera Active'\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                                        lineNumber: 1279,\n                                                        columnNumber: 21\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                                lineNumber: 1277,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                type: \"file\",\n                                                accept: \"image/*\",\n                                                ref: fileInputRef,\n                                                style: {\n                                                    display: 'none'\n                                                },\n                                                onChange: handleFileUpload\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                                lineNumber: 1283,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            lastBarcode && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"last-barcode\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                        children: \"Last Barcode:\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                                        lineNumber: 1294,\n                                                        columnNumber: 23\n                                                    }, undefined),\n                                                    \" \",\n                                                    lastBarcode\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                                lineNumber: 1293,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                        lineNumber: 1269,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                lineNumber: 1260,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"card-footer\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: \"Position food item in frame, tap button to scan, or upload an image\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                        lineNumber: 1302,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"badge badge-primary\",\n                                        children: \"AI Enhanced\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                        lineNumber: 1305,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                lineNumber: 1301,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                        lineNumber: 1213,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bottom-actions\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"button-group\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"btn \".concat(barcodeScannerActive ? 'btn-secondary' : 'btn-primary'),\n                                    onClick: ()=>barcodeScannerActive ? stopBarcodeScanner() : startBarcodeScanner(),\n                                    disabled: !streamRef.current || isLoading,\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Barcode_Camera_CameraOff_ChevronDown_RefreshCcw_Upload_lucide_react__WEBPACK_IMPORTED_MODULE_4__.Barcode, {\n                                            size: 18\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                            lineNumber: 1318,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        barcodeScannerActive ? 'Stop Scanning' : 'Scan Barcode'\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                    lineNumber: 1313,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"btn btn-primary capture\",\n                                    onClick: ()=>captureImage(),\n                                    disabled: !streamRef.current || isLoading,\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Barcode_Camera_CameraOff_ChevronDown_RefreshCcw_Upload_lucide_react__WEBPACK_IMPORTED_MODULE_4__.Camera, {\n                                            size: 18\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                            lineNumber: 1328,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        \"Capture Photo\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                    lineNumber: 1323,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"btn btn-secondary upload\",\n                                    onClick: ()=>{\n                                        var _fileInputRef_current;\n                                        return (_fileInputRef_current = fileInputRef.current) === null || _fileInputRef_current === void 0 ? void 0 : _fileInputRef_current.click();\n                                    },\n                                    disabled: isLoading,\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Barcode_Camera_CameraOff_ChevronDown_RefreshCcw_Upload_lucide_react__WEBPACK_IMPORTED_MODULE_4__.Upload, {\n                                            size: 18\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                            lineNumber: 1338,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        \"Upload Image\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                    lineNumber: 1333,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                            lineNumber: 1311,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                        lineNumber: 1310,\n                        columnNumber: 11\n                    }, undefined),\n                    isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"loading-container\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"loading-spinner\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                lineNumber: 1346,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"font-semibold text-lg mb-1\",\n                                        children: \"Processing Image\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                        lineNumber: 1348,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-sm\",\n                                        children: \"Our AI is analyzing your food for detailed nutritional information\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                        lineNumber: 1349,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                                lineNumber: 1347,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n                        lineNumber: 1345,\n                        columnNumber: 13\n                    }, undefined)\n                ]\n            }, void 0, true)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Projects\\\\Hackathon July 2025\\\\Vitalmatrix\\\\src\\\\features\\\\NutriLens\\\\NutriLensPage.tsx\",\n        lineNumber: 1154,\n        columnNumber: 5\n    }, undefined);\n};\n_s(NutriLensPage, \"iTc2QEAQlMWMJw3yVLQdJZyjO/Y=\");\n_c = NutriLensPage;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NutriLensPage);\nvar _c;\n$RefreshReg$(_c, \"NutriLensPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/features/NutriLens/NutriLensPage.tsx\n"));

/***/ })

});