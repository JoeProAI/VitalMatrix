import React, { useState } from 'react';

const FeaturesSection = () => {
  const [activeTab, setActiveTab] = useState(0);
  
  const features = [
    {
      id: 'community-pulse',
      title: 'Community Pulse',
      description: 'Real-time healthcare facility insights generated by the community, for the community.',
      benefits: [
        'Live wait time estimates from community reports',
        'Facility conditions and crowding levels',
        'Staff availability and overall experience',
        'Emergency alerts and special condition notifications'
      ],
      icon: (
        <svg className="w-6 h-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
        </svg>
      ),
      color: 'electric-blue',
      bgGradient: 'from-electric-blue/20 via-electric-blue/5 to-transparent',
    },
    {
      id: 'nutri-lens',
      title: 'NutriLens Scanner',
      description: 'AI-powered nutrition analysis that helps you make informed food choices instantly.',
      benefits: [
        'Instant nutritional information from photos',
        'Personalized health recommendations',
        'Allergen and ingredient alerts',
        'Food score ratings based on your health profile'
      ],
      icon: (
        <svg className="w-6 h-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z" />
        </svg>
      ),
      color: 'neon-purple',
      bgGradient: 'from-neon-purple/20 via-neon-purple/5 to-transparent',
    },
    {
      id: 'health-insights',
      title: 'Health Insights',
      description: 'Personalized healthcare recommendations based on community data and your profile.',
      benefits: [
        'Personalized healthcare facility recommendations',
        'Health trend analysis and predictions',
        'Community health alerts in your area',
        'Customized dietary and nutrition guidance'
      ],
      icon: (
        <svg className="w-6 h-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
        </svg>
      ),
      color: 'hot-pink',
      bgGradient: 'from-hot-pink/20 via-hot-pink/5 to-transparent',
    }
  ];

  return (
    <section id="features" className="py-20 px-4 sm:px-6 lg:px-8 relative">
      <div className="max-w-7xl mx-auto">
        <div className="text-center mb-16">
          <h2 className="text-3xl sm:text-4xl font-bold mb-4">
            Powerful Features for <span className="bg-gradient-to-r from-electric-blue to-neon-purple bg-clip-text text-transparent">Better Healthcare</span>
          </h2>
          <p className="text-gray-300 max-w-2xl mx-auto">
            VitalMatrix combines community insights with cutting-edge AI to transform how you interact with healthcare and nutrition.
          </p>
        </div>
        
        {/* Feature tabs */}
        <div className="flex flex-col lg:flex-row gap-12">
          {/* Tab navigation */}
          <div className="lg:w-1/3">
            <div className="space-y-2 sticky top-24">
              {features.map((feature, index) => (
                <button
                  key={feature.id}
                  onClick={() => setActiveTab(index)}
                  className={`w-full text-left p-4 rounded-lg transition-all duration-300 flex items-center ${
                    activeTab === index
                      ? `bg-gradient-to-r ${feature.bgGradient} border-l-4 border-${feature.color}`
                      : 'bg-dark-surface/50 hover:bg-dark-surface'
                  }`}
                >
                  <div className={`p-2 rounded-lg mr-4 ${activeTab === index ? `text-${feature.color}` : 'text-gray-400'}`}>
                    {feature.icon}
                  </div>
                  <div>
                    <h3 className={`font-semibold text-lg ${
                      activeTab === index ? `text-${feature.color}` : 'text-white'
                    }`}>
                      {feature.title}
                    </h3>
                    <p className="text-gray-400 text-sm hidden sm:block">{feature.description.split(' ').slice(0, 6).join(' ')}...</p>
                  </div>
                </button>
              ))}
            </div>
          </div>
          
          {/* Feature details */}
          <div className="lg:w-2/3">
            <div className="bg-dark-surface border border-gray-800 rounded-2xl p-6 sm:p-8">
              <div className="mb-6">
                <div className={`inline-flex items-center justify-center p-2 rounded-lg bg-${features[activeTab].color}/20 text-${features[activeTab].color} mb-4`}>
                  {features[activeTab].icon}
                </div>
                <h3 className="text-2xl sm:text-3xl font-bold mb-2">{features[activeTab].title}</h3>
                <p className="text-gray-300">{features[activeTab].description}</p>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-8">
                {features[activeTab].benefits.map((benefit, i) => (
                  <div key={i} className="flex items-start">
                    <div className={`mt-1 p-1 rounded-full bg-${features[activeTab].color}/20 text-${features[activeTab].color} mr-3`}>
                      <svg className="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                        <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                      </svg>
                    </div>
                    <span>{benefit}</span>
                  </div>
                ))}
              </div>
              
              <div className="flex">
                <button className={`px-6 py-3 rounded-full bg-${features[activeTab].color}/20 text-${features[activeTab].color} hover:bg-${features[activeTab].color}/30 transition-colors duration-300`}>
                  Learn more about {features[activeTab].title}
                </button>
              </div>
              
              {/* Feature visualization */}
              <div className="mt-8 relative h-64 sm:h-80 rounded-xl overflow-hidden bg-gradient-to-br from-dark-bg-secondary to-dark-bg border border-gray-800">
                <div className="absolute inset-0 flex items-center justify-center">
                  <div className={`text-${features[activeTab].color} text-opacity-20 text-9xl font-bold`}>
                    {activeTab === 0 && 'PULSE'}
                    {activeTab === 1 && 'SCAN'}
                    {activeTab === 2 && 'INSIGHTS'}
                  </div>
                </div>
                <div className="absolute bottom-0 left-0 right-0 h-1/2 bg-gradient-to-t from-dark-bg to-transparent"></div>
                <div className="absolute inset-0 flex items-center justify-center">
                  <p className="text-center text-gray-500 px-4">Interactive {features[activeTab].title} visualization coming soon</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default FeaturesSection;
